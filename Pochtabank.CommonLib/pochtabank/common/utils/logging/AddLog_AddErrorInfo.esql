BROKER SCHEMA pochtabank.common.utils.logging
PATH pochtabank.common.utils;


CREATE COMPUTE MODULE AddLog_AddErrorInfo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- копируем сообщение и LocalEnvironment
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment = InputLocalEnvironment;
		-- сохраняем первоначальное исключение, если не повторная попытка
		IF NOT EXISTS(Environment.usr.originalExceptionName[]) THEN
		 SET Environment.usr.originalExceptionName = CheckExceptionName(InputExceptionList) ;
		END IF;
		-- добавляем дерево ExceptionList к последнеу логу
		DECLARE ref REFERENCE TO InputExceptionList;
		CALL AddErrorListToLastLog(Environment,ref);	
		-- удаляем сообщение об ошибке, чтобы не произошел откат
		-- транзакции, если мы знаем, что в этом месте обрабатывается
		-- исключение
		DELETE FIELD OutputExceptionList;
		RETURN TRUE;
	END;
	
	CREATE FUNCTION CheckExceptionName(IN inExList REFERENCE) RETURNS CHARACTER
begin
	DECLARE exListName CHARACTER '';
	DECLARE lstException REFERENCE TO inExList.*[1];
	WHILE LASTMOVE(lstException) DO
		IF EXISTS(lstException.*[]) AND NOT(FIELDNAME(lstException) = 'Insert') THEN
			SET exListName = FIELDNAME(lstException);
		END IF;
		MOVE lstException LASTCHILD;
	END WHILE;
	return exListName;
end;


END MODULE;
